@startuml
title Get Recipe

actor Client
participant "API Gateway" as APIGateway
participant Lambda
participant GetRecipe
participant RecipeDao
participant ModelConverter
database DynamoDB


Client -> APIGateway : HTTP Request
activate Client
APIGateway --> Lambda : GET /Recipe /requestedName
activate Lambda

Lambda -> GetRecipe : GetRecipeRequest
activate GetRecipe
GetRecipe -> RecipeDao : getRecipe(requestedName)
activate RecipeDao
RecipeDao -> DynamoDB : load recipe by name
alt if recipe name does not exist
    RecipeDao <-- DynamoDB : null
    Lambda <-- RecipeDao : throw RecipeNotFoundException
    APIGateway <-- Lambda
    Client <-- APIGateway : 404 Response
else otherwise, continue
end

RecipeDao <-- DynamoDB : Recipe
GetRecipe <-- RecipeDao : Recipe

GetRecipe -> GetRecipe : populate Recipe object
deactivate RecipeDao
GetRecipe -> ModelConverter : toRecipeModel(Recipe)
activate ModelConverter
GetRecipe <-- ModelConverter : RecipeModel
deactivate ModelConverter


deactivate RecipeDao
Lambda <-- GetRecipe : GetRecipeResult
deactivate GetRecipe
APIGateway <-- Lambda


deactivate Lambda
Client <-- APIGateway : 200 Response
deactivate Client

@enduml